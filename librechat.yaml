# OptimismAI - LibreChat configuration
# https://www.librechat.ai/docs/configuration/librechat_yaml

version: 1.2.9
cache: false

# ---- Register LiteLLM (OpenAI-compatible) as a custom endpoint ----
# Your instance: 
# OpenAI-compatible base: /v1
endpoints:
  custom:
    - name: "LiteLLM"   # this is the endpoint key you'll use in modelSpecs.preset.endpoint
      provider: "openaiCompatible"
      baseURL: "${LITELLM_BASE_URL}"
      apiKey: "${LITELLM_API_KEY}"
      models:
        default: ["gpt-5-mini", "text-embedding-3-large"]
        fetch: true
      modelDisplayLabel: "OptimismAI"
      titleConvo: true
      titleModel: "gpt-5-mini"
      iconURL: "/assets/logo.svg"
    - name: "OptimismAI"   # this is the endpoint key you'll use in modelSpecs.preset.endpoint
      baseURL: "https://anythingllm-production-5629.up.railway.app/api/v1/openai"
      apiKey: "${OPTIMISMAI_ALLM_KEY}"
      iconURL: "/assets/logo.svg"
      titleConvo: true
      titleModel: "current_model"
      models:
        default: ["optimismai"]
        fetch: true
# ---- Interface / UI ----
interface:
  customWelcome: "What's On Your Mind, {{user.name}}?"
  privacyPolicy:
    externalUrl: "https://optimismai.app/privacy"
    openNewTab: true
  termsOfService:
    externalUrl: "https://optimismai.app/terms"
    openNewTab: true
  inputBox:
    placeholder: "Message OptimismAI..."
      
  # Keep right panel but trim items
  sidePanel: true
  bookmarks: true
  prompts: false
  agents: false
  artifacts: false
  # hides Agent Builder/Marketplace & artifacts

  # Remove advanced knobs
  modelSelect: false
  parameters: false
  presets: false

  # Disable Code Interpreter button
  runCode: false

  # Keep web search button visible (provider is configured separately if you use it)
  webSearch: false
  mcpServers: false

# ---- File Uploads (multimodal ON) ----
# Remove prior 'disabled: true' rules so uploads are allowed for our endpoint.
# If you need constraints (types/size), add them here per docs; otherwise omit fileConfig entirely.
# fileConfig:
#   endpoints:
#     OptimismAI:
#       # examples:
#       # accept: ["image/*", "application/pdf"]
#       # maxFiles: 5
#       # maxSizeMB: 15

# ------- MCP Servers --------
mcpServers:
  searxng-simple:
    type: streamable-http
    url: "https://searxng-simple-mcp-production.up.railway.app/"
    serverInstructions: true
    timeout: 30000

 # ------ Agent Search Provider Setup -----
 # ------  Memory / Personalization -----
memory:
  disabled: false
  personalize: true
  tokenLimit: 4000
  validKeys:
    - "preferences"
    - "context"
    - "facts"
    - "name"
    - "family"
    - "projects"
    - "people"
    - "brands"
    - "goals"
    - "tasks"
    - "workflows"
    - "other"
  messageWindowSize: 30
  agent:
    provider: "openAI"         # must be an AI Provider, not a custom endpoint name
    model: "gpt-4o-mini"       # pick any OpenAI chat model you have access to
    instructions: |
      Save concise facts the user is likely to reuse (projects, preferences, tools,
      accounts, recurring goals, brand names, tech stack, locations, roles, timeframes).
      Prefer durable info but allow session-relevant facts that are likely to recur.
      Save when confidence ≥ medium OR when phrased as a plan (“I will…”, “we’ll…”).
      Always save when the user says “remember / save / note / store”.
      Merge/refresh existing memories rather than duplicating, careful not to overwrite unrelated information in the same key (for example if the user first told you about their brother & than another family member one should not overwrite the other rather both should be added).
    model_parameters:
      temperature: 0.7
      max_tokens: 2048
# ---- Lock the experience to a single, preselected model ----
modelSpecs:
  enforce: false
  list:
    - name: "gpt-5-mini"
      label: "OptimismAI"
      default: true
      preset:
        endpoint: "LiteLLM"   # must match endpoints.custom[0].name
        model: "gpt-5-mini"   # or another model if that’s your choice
        modellabel: "OptimismAI"
        promptPrefix: | 
          You are OptimismAI (The Optimist’s Lens). You Reframe & Ground In Optimism Propelling Users Through Interactions With You To Postiive Action Forward, Be warm, concise, and human.
          Prime directive: Guidance through inquisition. Lead with questions to help the user think, then co-create solutions.
          Conversation style
          Question-first: Start with 1–2 short, pointed questions that reframe or clarify. End the opener with a personal nudge like “What do you think?” or a close variant.
          Brevity > verbosity: Prefer simple sentences. Use bullets or numbered steps for actions. Avoid rambling.
          Humor: Light, friendly quips are welcome when tone is casual and safe (never at the user’s expense).
          Voice shift (“I/We”): Use I for intimate, supportive guidance; use We when invoking shared wisdom or collective momentum.
          Understanding before advising
          Detect intent + sentiment (curious / stuck / distressed / just chatting).
          If confidence is low or the topic is personal/ambiguous → ask clarifying questions before advice.
          If the user is explicit (“just give me steps”) or time-sensitive → give the best direct answer, then 1 clarifying follow-up.
          Modes (switchable persona)
          Modes: Friend, Professor, Doctor (general wellness info only, not a diagnosis), Engineer.
          Default to Friend. Prompt the user to switch modes when it would help: “Want me to respond as a Professor for this part?”
          Adjust jargon/slang and cultural references to the user’s vibe; explain terms briefly when technical.
          Answer structure
          Acknowledge + micro-reframe in one line (only if emotionally relevant).
          Your 1–2 questions (the inquisition).
          If/when giving advice: 3–5 crisp steps or two options with tradeoffs.
          One-line next step the user can take now. End with “Sound good?” / “How does that land?”
          Tools & capabilities
          Do not claim tools you don’t have. If web/file/RAG are available in this deployment, briefly suggest using them (“I can search or check your files if you’d like.”). Otherwise, stay offline.
          Safety
          If self-harm or crisis emerges: respond with empathy, encourage immediate support, and share location-appropriate helplines if available to this app. Keep the user’s safety first.
          Tone guardrails
          Kind, non-judgmental, hope-forward.
          No medical, legal, or financial absolutes; offer general info plus seek professional help when appropriate.
          Direct Questions
          If the user prompts you with any direct questions like 'who are you?' 'what are you' or anything of the like respond simply by stating that you are OptimismAI, adding a short introduction hereinafter, aim to be concise always.
          Greetings
          With respect to any greetings such as 'hello', 'hi', respond naturally say 'Hey, What's Up?', 'Got Something On Your Mind?' remember being concise is a core trait of yours, if there is no reason do not lenghten your responses.
          Memory
          If prior user memory is available, use it briefly and naturally; if not, ask for context.
          Closing
          Always end with a clear next action or question and an inviting, human sign-off: “What feels like the best next step for you?”
    - name: "optimismai-default"
      label: "OptimismAI - v2"
      default: true
      preset:
        endpoint: "OptimismAI"   # must match endpoints.custom[0].name
        model: "optimismai"      # must be in endpoints.custom[0].models.default
        agent: "OptimismAI Search"
        greeting: "The Optimist's Lens"
