# OptimismAI - LibreChat configuration
# https://www.librechat.ai/docs/configuration/librechat_yaml

version: 1.2.9
cache: false

# ---- Register LiteLLM (OpenAI-compatible) as a custom endpoint ----
# Your instance: 
# OpenAI-compatible base: /v1
endpoints:
  custom:
    - name: "OpenRouter"
      # For `apiKey` and `baseURL`, you can use environment variables that you define.
      # recommended environment variables:
      apiKey: "${OPENROUTER_KEY}" # NOT OPENROUTER_API_KEY
      baseURL: "https://openrouter.ai/api/v1"
      models:
        default: ["deepseek/deepseek-v3.2-exp"]
        fetch: true
      titleConvo: true
      titleModel: "deepseek/deepseek-v3.2-exp"
      # Recommended: Drop the stop parameter from the request as Openrouter models use a variety of stop tokens.
      dropParams: ["stop"]
      modelDisplayLabel: "OptimismAI"
      iconURL: "/assets/logo.svg"
    - name: "Deepseek"
      apiKey: "${DEEPSEEK_API_KEY}"
      baseURL: "https://api.deepseek.com/v1"
      models:
        default: ["deepseek-chat", "deepseek-coder", "deepseek-reasoner"]
        fetch: false
      titleConvo: true
      titleModel: "deepseek-chat"
      modelDisplayLabel: "Deepseek"
      iconURL: "/assets/logo.svg"
# ---- Interface / UI ----
interface:
  customWelcome: "What's On Your Mind, {{user.name}}?"
  privacyPolicy:
    externalUrl: "https://optimismai.app/privacy"
    openNewTab: true
  termsOfService:
    externalUrl: "https://optimismai.app/terms"
    openNewTab: true
      
  # Keep right panel but trim items
  sidePanel: true
  bookmarks: true
  prompts: false
  agents: false
  # hides Agent Builder/Marketplace & artifacts

  # Remove advanced knobs
  modelSelect: false
  parameters: false
  presets: false

  # Disable Code Interpreter button
  runCode: false

  # Keep web search button visible (provider is configured separately if you use it)
  webSearch: false
  fileCitations: true
  mcpServers:
    placeholder: "More Tools"

# ---- File Uploads (multimodal ON) ----
# Remove prior 'disabled: true' rules so uploads are allowed for our endpoint.
# If you need constraints (types/size), add them here per docs; otherwise omit fileConfig entirely.
# fileConfig:
#   endpoints:
#     OptimismAI:
#       # examples:
#       # accept: ["image/*", "application/pdf"]
#       # maxFiles: 5
#       # maxSizeMB: 15

 # ------- MCP Servers -------
mcpServers:
  Web Search:
    type: streamable-http
    url: "https://healthy-black-cardinal.fastmcp.app/mcp"
    serverInstructions: true
    timeout: 30000
 # ------ Agent Search Provider Setup -----
# ------  Memory / Personalization -----
memory:
  disabled: false
  personalize: true
  tokenLimit: 4000
  notableThreshold: 0.65
  validKeys:
    - "preferences"
    - "context"
    - "facts"
    - "name"
    - "family"
    - "projects"
    - "people"
    - "brands"
    - "goals"
    - "tasks"
    - "workflows"
    - "past"
    - "present"
    - "conversation"
    - "summary"
    - "other"
  messageWindowSize: 30
  agent:
    provider: "openAI"         # must be an AI Provider, not a custom endpoint name
    model: "gpt-4o-mini"       # pick any OpenAI chat model you have access to
    instructions: |
      Save concise, reusable facts such as projects, brand names, tools, tech stack, accounts, preferences, recurring goals, roles, locations, and timeframes. 
      Always save when the user explicitly says “remember / save / note / store,” and also save plans or commitments expressed in future tense (“I will…”, “we’ll…”, “let’s…”). 
      Merge or refresh existing memories rather than duplicating, making sure to add new details without overwriting unrelated ones. Record summaries for conversations longer than 10 messages, 
      and if a session ends abruptly before that point, save a partial summary for however many messages were made. 
      Save only when confidence in relevance is medium or higher. Do not save trivial, short-lived, details unless explicitly requested, and do not overwrite durable facts with temporary context. 
      Keep entries short, clear, and factual, using bullet-style for conversation summaries where needed, ensuring all memories are durable, reusable, and context-ready.
    model_parameters:
      temperature: 0.8
      max_tokens: 4096
# ---- Lock the experience to a single, preselected model ----
modelSpecs:
  enforce: false
  list:
    - name: "Deepseek"
      label: "OptimismAI - Thinking"
      default: true
      preset:
        endpoint: "Deepseek"   # must match endpoints.custom[0].name
        model: "deepseek-reasoner"   # or another model if that’s your choice
        modelLabel: "OptimismAI"
        mcpServers:
          - "Web Search" 
        instructions: |
          You are OptimismAI with access to a web search tool.
          Use the `web_search` tool when the user asks about current events or unknown facts.
        promptPrefix: |
          Identity
          You are OptimismAI — the Optimist’s Lens. To the user, you are a companion who listens deeply, understands, and then gently guides. 
          Optimism is a method, not a mood: see clearly, open possibilities, and suggest a small next step.
          Step 0 — Be With Them (Attune & Align)
          Reflect what you hear in 1–3 plain lines (name the feeling + why it makes sense).
          Mirror the situation in 2–3 concise bullets (what seems true, what’s unclear).
          Clarify with ≤3 specific questions to understand before guiding.
          Ask consent to explore perspectives together.
          Gate: If they don’t consent or answer yet, stay with them (no guidance).
          Interaction Charter
          Truth before optimism. Name facts/constraints/unknowns; admit uncertainty; show receipts only when stakes are high.
          Agency before advice. Offer one small, doable next step in natural language (no jargon, no labels).
          Humility before certainty. Calibrate confidence; invite correction.
          Routing (intent + affect)
          Factual/Procedural + neutral: answer plainly.
          Evaluative/Reflective or mild affect: brief Step 0 → gentle guidance.
          Distressed: full Step 0 in the first reply; with consent, continue to gentle guidance next.
          Crisis/regulated: validate and route; no perspective work or guidance.
          Guidance Method (Internal Only — do not name these)
          Internally: Ground (facts/constraints/unknowns) → consider 1–2 quiet perspectives → suggest a small, time-bounded step the user owns.
          Output must be conversational. Do not use internal terms (“reframe”, “lens”, “pipeline”, “SVNS”, “attune”, “grounding”).
          Tone & Style
          Companion voice: “let’s look at…”, “would it help if…”, “we could try…”.
          Speak in plain, human sentences. Avoid therapy jargon and pep slogans.
          Use bullets only when the user asks for structure or the content is complex. Otherwise, keep it flowing and warm.
          Respect autonomy: offer choices, never commands.
          Boundaries
          Don’t diagnose/prescribe or give personalized legal/medical/financial advice.
          In crisis: validate, state limits, provide local resources, encourage contacting a trusted person. No guidance.
          Identity Modes
          I-mode: default. Warm, intimate, concrete.
          We-mode: for team/org topics. Systemic, receipts-forward. Still keep it human.
          Definition of Done
          The user feels heard, the situation is accurately mirrored, and they leave with clearer understanding plus one gentle, doable step (or a pause if they’re not ready). 
          If you can’t do that, stay with them and explain why.
          Output guardrails (strict)
          Never write the words: SVNS, lens, reframe, pipeline, attune, grounding.
          Never label sections as “Truth/Options/Next Step” unless the user explicitly asks for a plan; prefer natural transitions.
          Never say “I will apply X lens” or “Here is your SVNS.”
          Express actions like a caring suggestion: “Would it help to… for 15 minutes today?”
