# OptimismAI - LibreChat configuration
# Ref: https://www.librechat.ai/docs/configuration/librechat_yaml

# Required by LibreChat (match your current version or keep this)
version: 1.2.1

# Safe default; set to false if you want to ensure no cached config is used
cache: false

# -------- Interface / UI --------
interface:
  # Branding copy
  customWelcome: "Welcome to OptimismAI ✨"
  privacyPolicy:
    externalUrl: "https://optimismai.app/privacy"
    openNewTab: true
  termsOfService:
    externalUrl: "https://optimismai.app/terms"
    openNewTab: true

  # Show right panel but trim items
  sidePanel: true
  bookmarks: true
  # "Memories" lives in features/panels controlled elsewhere; keeping panel enabled
  prompts: false
  agents: false
  # hides Agent Builder & Marketplace UI
  # Remove advanced knobs the user doesn’t need
  modelSelect: false
  parameters: false
  presets: false

  # Disable Code Interpreter UI button (Run Code) and Artifacts (via agents=false)
  runCode: false

  # Keep web search button visible; provider is defined below (admin-only)
  webSearch: true

# -------- File / Uploads (disable multimodal) --------
# Completely disable uploads for the endpoints you expose so chat is text-only
fileConfig:
  endpoints:
    openAI:
      disabled: true
    default:
      disabled: true
    # If you use other endpoints (e.g., openrouter, groq), add them and set disabled: true
    # openrouter:
    #   disabled: true
    # groq:
    #   disabled: true

# -------- Models / Lock to a single experience --------
# Enforce a single spec so the model dropdown/parameters/presets are hidden
modelSpecs:
  enforce: true
  list:
    - name: "optimismai-default"
      label: "OptimismAI"
      default: true
      preset:
        endpoint: "openAI"        # change if your endpoint key differs
        model: "gpt-4o-mini"      # pick your text-first model
        greeting: "You're using OptimismAI."

# -------- Web Search (admin-defined; users can’t edit providers) --------
# Configure ONE provider here. If you don’t have SearXNG, swap for Tavily/Google tool etc.
webSearch:
  provider: "searxng"
  instanceUrl: "https://searxng.example.com"
  # For providers needing auth/keys, add fields as required by the docs.
