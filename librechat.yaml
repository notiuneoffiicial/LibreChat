# OptimismAI - LibreChat configuration
# https://www.librechat.ai/docs/configuration/librechat_yaml

version: 1.2.9
cache: false

# ---- Register LiteLLM (OpenAI-compatible) as a custom endpoint ----
# Your instance: 
# OpenAI-compatible base: /v1
endpoints:
  custom:
    - name: "LiteLLM"   # this is the endpoint key you'll use in modelSpecs.preset.endpoint
      provider: "openaiCompatible"
      baseURL: "${LITELLM_BASE_URL}"
      apiKey: "${LITELLM_API_KEY}"
      models:
        default: ["gpt-5-mini", "text-embedding-3-large"]
        fetch: true
      modelDisplayLabel: "OptimismAI"
      titleConvo: true
      titleModel: "gpt-5-mini"
      iconURL: "/assets/logo.svg"
    - name: "OptimismAI"   # this is the endpoint key you'll use in modelSpecs.preset.endpoint
      baseURL: "https://anythingllm-production-5629.up.railway.app/api/v1/openai"
      apiKey: "${OPTIMISMAI_ALLM_KEY}"
      iconURL: "/assets/logo.svg"
      titleConvo: true
      titleModel: "current_model"
      models:
        default: ["optimismai"]
        fetch: true
# ---- Interface / UI ----
interface:
  customWelcome: "What's On Your Mind, {{user.name}}?"
  privacyPolicy:
    externalUrl: "https://optimismai.app/privacy"
    openNewTab: true
  termsOfService:
    externalUrl: "https://optimismai.app/terms"
    openNewTab: true
      
  # Keep right panel but trim items
  sidePanel: true
  bookmarks: true
  prompts: false
  agents: false
  # hides Agent Builder/Marketplace & artifacts

  # Remove advanced knobs
  modelSelect: false
  parameters: false
  presets: false

  # Disable Code Interpreter button
  runCode: false

  # Keep web search button visible (provider is configured separately if you use it)
  webSearch: false
  mcpServers:
    placeholder: "Tools"

# ---- File Uploads (multimodal ON) ----
# Remove prior 'disabled: true' rules so uploads are allowed for our endpoint.
# If you need constraints (types/size), add them here per docs; otherwise omit fileConfig entirely.
# fileConfig:
#   endpoints:
#     OptimismAI:
#       # examples:
#       # accept: ["image/*", "application/pdf"]
#       # maxFiles: 5
#       # maxSizeMB: 15

 # ------- MCP Servers -------
mcpServers:
  Web Search:
    type: streamable-http
    url: "https://healthy-black-cardinal.fastmcp.app/mcp"
    serverInstructions: true
    timeout: 30000
 # ------ Agent Search Provider Setup -----
# ------  Memory / Personalization -----
memory:
  disabled: false
  personalize: true
  tokenLimit: 4000
  validKeys:
    - "preferences"
    - "context"
    - "facts"
    - "name"
    - "family"
    - "projects"
    - "people"
    - "brands"
    - "goals"
    - "tasks"
    - "workflows"
    - "past"
    - "present"
    - "conversation"
    - "summary"
    - "other"
  messageWindowSize: 30
  agent:
    provider: "openAI"         # must be an AI Provider, not a custom endpoint name
    model: "gpt-4o-mini"       # pick any OpenAI chat model you have access to
    instructions: |
      Save concise, reusable facts such as projects, brand names, tools, tech stack, accounts, preferences, recurring goals, roles, locations, and timeframes. 
      Always save when the user explicitly says “remember / save / note / store,” and also save plans or commitments expressed in future tense (“I will…”, “we’ll…”, “let’s…”). 
      Merge or refresh existing memories rather than duplicating, making sure to add new details without overwriting unrelated ones. Record summaries for conversations longer than 10 messages, 
      and if a session ends abruptly before that point, save a partial summary for however many messages were made. 
      Save only when confidence in relevance is medium or higher. Do not save trivial, short-lived, details unless explicitly requested, and do not overwrite durable facts with temporary context. 
      Keep entries short, clear, and factual, using bullet-style for conversation summaries where needed, ensuring all memories are durable, reusable, and context-ready.
    model_parameters:
      temperature: 0.8
      max_tokens: 4096
# ---- Lock the experience to a single, preselected model ----
modelSpecs:
  enforce: false
  list:
    - name: "gpt-5-mini"
      label: "OptimismAI"
      default: true
      preset:
        endpoint: "LiteLLM"   # must match endpoints.custom[0].name
        model: "gpt-5-mini"   # or another model if that’s your choice
        modellabel: "OptimismAI"
        mcpServers:
          - "Web Search" 
        instructions: |
          You are OptimismAI with access to a web search tool.
          Use the `web_search` tool when the user asks about current events or unknown facts.
        promptPrefix: | 
          You are OptimismAI (The Optimist’s Lens). You Reframe & Ground In Optimism Propelling Users Through Interactions With You To Postiive Action Forward, Be warm, concise, and human.
          Prime directive: Guidance through inquisition. Lead with questions to help the user think, then co-create solutions.
          Conversation style
          Question-first: Start with 1–2 short, pointed questions that reframe or clarify. End the opener with a personal nudge like “What do you think?” or a close variant, however the nudge is subject to what is asked & the context of the conversation.
          Brevity > verbosity: Prefer simple sentences. Use bullets or numbered steps for actions. Avoid rambling.
          Humor: Light, friendly quips are welcome when tone is casual and safe (never at the user’s expense).
          Voice shift (“I/We”): Use I for intimate, supportive guidance; use We when invoking shared wisdom or collective momentum.
          Understanding before advising
          Detect intent + sentiment (curious / stuck / distressed / just chatting).
          If confidence is low or the topic is personal/ambiguous → ask clarifying questions before advice.
          If the user is explicit (“just give me steps”) or time-sensitive → give the best direct answer, then 1 clarifying follow-up.
          Speech
          Adjust jargon/slang and cultural references to the user’s vibe; explain terms briefly when technical.
          Answer structure
          Acknowledge + micro-reframe in one line (only if emotionally relevant).
          Your 1–2 questions (the inquisition).
          If/when giving advice: 3–5 crisp steps or two options with tradeoffs.
          One-line next step the user can take now. End with “Sound good?” / “How does that land?”
          Tools & capabilities
          Do not claim tools you don’t have. If web/file/RAG are available in this deployment, briefly suggest using them (“I can search or check your files if you’d like.”). Otherwise, stay offline.
          Safety
          If self-harm or crisis emerges: respond with empathy, encourage immediate support, and share location-appropriate helplines if available to this app. Keep the user’s safety first.
          Tone guardrails
          Kind, non-judgmental, hope-forward.
          No medical, legal, or financial absolutes; offer general info plus seek professional help when appropriate.
          Direct Questions
          If the user prompts you with any direct questions like 'who are you?' 'what are you' or anything of the like respond simply by stating that you are OptimismAI, adding a short introduction hereinafter, aim to be concise always.
          Greetings
          With respect to any greetings such as 'hello', 'hi', respond naturally say 'Hey, What's Up?', 'Got Something On Your Mind?' remember being concise is a core trait of yours, if there is no reason do not lenghten your responses.
          Memory
          If prior user memory is available, use it briefly and naturally; if not, ask for context.
          Closing
          Always end with a clear next action or question and an inviting, human sign-off: “What feels like the best next step for you?”
    - name: "optimismai-default"
      label: "OptimismAI - v2"
      default: true
      preset:
        endpoint: "OptimismAI"   # must match endpoints.custom[0].name
        model: "optimismai"      # must be in endpoints.custom[0].models.default
        greeting: "The Optimist's Lens"
